name: –ê–≤—Ç–æ—Å–±–æ—Ä–∫–∞ Music M (Unpacked - –≤—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)

on:
  workflow_dispatch:
    inputs:
      namevers:
        description: "–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞"
        required: true
        default: "ü§ñ –ê–≤—Ç–æ—Å–±–æ—Ä–∫–∞"
      descr:
        description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞"
        required: true
        default: "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
      release:
        description: "–í—ã–∫–∏–Ω—É—Ç—å –≤ —Ä–µ–ª–∏–∑?"
        required: true
        default: false
        type: boolean
      prerelease:
        description: "–ü—Ä–µ—Ä–µ–ª–∏–∑?"
        required: true
        default: true
        type: boolean

  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-unpacked-all:
    runs-on: windows-latest
    env:
      Solution_Name: "VK UI3"
      Configuration: Unpacked

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # –§–∏–∫—Å–∏—Ä—É–µ–º SDK 8.0
      - name: Pin .NET SDK 8 via global.json
        run: |
          Set-Content -Path global.json -Value '{ "sdk": { "version": "8.0.100", "rollForward": "feature" } }'

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      # PFX
      - name: Decode PFX
        run: |
          $bytes = [Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
          $certPath = "${{ github.workspace }}\signcert.pfx"
          [IO.File]::WriteAllBytes($certPath, $bytes)

      # 1. –°–±–æ—Ä–∫–∞
      - name: Build
        shell: pwsh
        run: |
          $arches = @(
            @{ Platform = "x64";   RID = "win-x64"   },
            @{ Platform = "x86";   RID = "win-x86"   },
            @{ Platform = "ARM64"; RID = "win-arm64" }
          )
      
          foreach ($a in $arches) {
            Write-Host "=== Build $($a.Platform) ==="
            msbuild "$env:Solution_Name\$env:Solution_Name.csproj" `
              "/p:Configuration=$env:Configuration" `
              "/p:Platform=$($a.Platform)" `
              "/p:RuntimeIdentifier=$($a.RID)" `
              /restore `
              /p:DisableRuntimeIdentifierInference=true `
              /p:EnableNETAnalyzers=false `
              /p:WarningLevel=0 `
              /p:TreatWarningsAsErrors=false `
              /clp:ErrorsOnly

          }

# 2. –ü–æ–¥–ø–∏—Å—å
      - name: Sign executables
        shell: pwsh
        run: |
          $certPath = "${{ github.workspace }}\signcert.pfx"
          $password = "${{ secrets.PFX_PASSWORD }}"
          $signtool = Get-ChildItem "C:\Program Files (x86)\Windows Kits\10\bin" -Recurse -Filter signtool.exe |
                      Where-Object { $_.FullName -match 'x64' } |
                      Select-Object -First 1 -ExpandProperty FullName
          if (-not $signtool) { throw "signtool.exe –Ω–µ –Ω–∞–π–¥–µ–Ω" }
      
          $arches = @("x64","x86","ARM64")
          foreach ($platform in $arches) {
            $exe = Get-ChildItem "$env:Solution_Name\bin\$platform\$env:Configuration" -Recurse -Include *.exe | Select-Object -First 1
            if (-not $exe) { throw "–ù–µ –Ω–∞–π–¥–µ–Ω exe –¥–ª—è $platform" }
            & $signtool sign /f $certPath /p $password /tr http://timestamp.digicert.com /td sha256 /fd sha256 $exe.FullName
          }

      # 3. –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–æ–π build‚Äë–ø–∞–ø–∫–∏
      - name: Package build folders
        shell: pwsh
        run: |
          $arches = @("x64","x86","ARM64")
          foreach ($platform in $arches) {
            $buildDir = Join-Path "$env:Solution_Name\bin" "$platform\$env:Configuration"
            if (-not (Test-Path $buildDir)) { throw "–ü–∞–ø–∫–∞ —Å–±–æ—Ä–∫–∏ –¥–ª—è $platform –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" }
      
            $zipName = "VK_UI3_$platform.zip"
            if (Test-Path $zipName) { Remove-Item $zipName -Force }
      
            Compress-Archive -Path "$buildDir\*" -DestinationPath $zipName -Force
          }




      # –ó–∞–≥—Ä—É–∑–∫–∞ –≤ —Ä–µ–ª–∏–∑
      - name: Upload zips to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: VK_UI3_*.zip
          tag: ${{ github.ref_name }}
          overwrite: true
          file_glob: true

