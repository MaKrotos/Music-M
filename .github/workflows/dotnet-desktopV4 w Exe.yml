name: –ê–≤—Ç–æ—Å–±–æ—Ä–∫–∞ Music M (Unpacked - –≤—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)

on:
  workflow_dispatch:
    inputs:
      namevers:
        description: "–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞"
        required: true
        default: "ü§ñ –ê–≤—Ç–æ—Å–±–æ—Ä–∫–∞"
      descr:
        description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞"
        required: true
        default: "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
      release:
        description: "–í—ã–∫–∏–Ω—É—Ç—å –≤ —Ä–µ–ª–∏–∑?"
        required: true
        default: false
        type: boolean
      prerelease:
        description: "–ü—Ä–µ—Ä–µ–ª–∏–∑?"
        required: true
        default: true
        type: boolean

  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-unpacked-all:
    runs-on: windows-latest
    env:
      Solution_Name: "VK UI3"
      Configuration: Unpacked

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Decode PFX
        run: |
          $bytes = [Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
          $certPath = "${{ github.workspace }}\signcert.pfx"
          [IO.File]::WriteAllBytes($certPath, $bytes)

      - name: Setup .NET & MSBuild
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - uses: microsoft/setup-msbuild@v2

      - name: Restore
        run: msbuild "$env:Solution_Name\$env:Solution_Name.csproj" /t:Restore /p:Configuration=$env:Configuration

      - name: Build, sign and zip all archs
        run: |
          $certPath = "${{ github.workspace }}\signcert.pfx"
          $password = "${{ secrets.PFX_PASSWORD }}"

          $arches = @("x64", "x86", "ARM64")
          foreach ($arch in $arches) {
            Write-Host "=== –°–±–æ—Ä–∫–∞ $arch ==="
            msbuild "$env:Solution_Name\$env:Solution_Name.csproj" /p:Configuration=$env:Configuration /p:Platform=$arch

            $exePath = Get-ChildItem "$env:Solution_Name\bin\$arch\$env:Configuration\*.exe" | Select-Object -First 1

            & "C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe" sign `
              /f $certPath /p $password /tr http://timestamp.digicert.com /td sha256 /fd sha256 $exePath.FullName

            $zipName = "VK_UI3_${arch}.zip"
            Compress-Archive -Path $exePath.FullName -DestinationPath $zipName -Force
          }
        shell: pwsh

      - name: Upload all zips to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: VK_UI3_*.zip
          tag: ${{ github.ref_name }}
          overwrite: true
          file_glob: true
