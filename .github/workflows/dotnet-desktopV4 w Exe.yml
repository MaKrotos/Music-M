name: –ê–≤—Ç–æ—Å–±–æ—Ä–∫–∞ Music M with EXE

on:
  workflow_dispatch:
    inputs:
      namevers:
        description: "–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞"
        required: true
        default: "ü§ñ –ê–≤—Ç–æ—Å–±–æ—Ä–∫–∞"
      descr:
        description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞"
        required: true
        default: "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
      release:
        description: "–í—ã–∫–∏–Ω—É—Ç—å –≤ —Ä–µ–ª–∏–∑?"
        required: true
        default: false
        type: boolean
      prerelease:
        description: "–ü—Ä–µ—Ä–µ–ª–∏–∑?"
        required: true
        default: true
        type: boolean

  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        platform: [x64]

    runs-on:
      windows-latest # –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ä–∞–Ω–Ω–µ—Ä–æ–≤
      # —Å–º. https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: "VK UI3 (Package)" # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ —Ä–µ—à–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, App1.sln.

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          node-version: 16
          fetch-depth: 0

      # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ base64 pfx –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º Signing_Certificate
      - name: Decode the pfx
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
          $certificatePath = "${{ github.workspace }}\GitHubActionsWorkflow.pfx"
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

      - name: –û–±–Ω–æ–≤–∏—Ç—å TOKEN_STAT_SLY
        run: |
          $repoName = "${{ github.repository }}".Split('/')[1]
          $content = Get-Content -Path "D:\a\$repoName\$repoName\VK UI3\StaticParams.cs"
          $updatedContent = $content -replace 'Environment.GetEnvironmentVariable\("TOKEN_STAT_SLY"\)', '"${{ secrets.TOKEN_STAT_SLY }}"'
          Set-Content -Path "D:\a\$repoName\$repoName\VK UI3\StaticParams.cs" -Value $updatedContent
          Write-Output $updatedContent

      - name: Display disk tree
        run: |
          Get-ChildItem -Recurse | Sort-Object Length -Descending

      # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å .NET Core
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # –î–æ–±–∞–≤–∏—Ç—å MSBuild –≤ PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2

      - name: –ò–∑–≤–ª–µ—á—å –≤–µ—Ä—Å–∏—é
        id: get_version
        run: |
          $repoName = "${{ github.repository }}".Split('/')[1]
          $csprojPath = "D:\a\$repoName\$repoName\VK UI3\VK UI3.csproj"
          $doc = New-Object xml
          $doc.Load((Convert-Path $csprojPath))
          $version = $doc.SelectSingleNode('//AppxPackageVersion').InnerText
          echo "::set-output name=VERSION::$version"
          echo "–í–µ—Ä—Å–∏—è: $version"
        continue-on-error: true
        if: github.event.inputs.release == 'true'

      - name: –ü–æ–¥—Å—Ç–∞–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é –≤ Package.appxmanifest
        run: |
          $repoName = "${{ github.repository }}".Split('/')[1]
          $csproj = "D:\a\$repoName\$repoName\VK UI3\VK UI3.csproj"
          $manifest = "D:\a\$repoName\$repoName\VK UI3 (Package)\Package.appxmanifest"
          [xml]$doc = Get-Content $csproj
          $version = $doc.SelectSingleNode('//AppxPackageVersion').InnerText.Trim()
          [xml]$xml = Get-Content $manifest
          $xml.Package.Identity.Version = $version
          $xml.Save($manifest)
        if: github.event.inputs.release == 'true'

      - name: Upload Package.appxmanifest as artifact
        uses: actions/upload-artifact@v4
        with:
          name: PackageAppxManifest
          path: D:\a\Music-M\Music-M\VK UI3 (Package)\Package.appxmanifest
        if: github.event.inputs.release == 'true'

      # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∞–ø–∫–∏ obj RuntimeIdentifiers
      - name: Restore the application
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}
          
      - name: Clean publish directories
        run: |
          Remove-Item -Recurse -Force publish-x64, publish-x86, publish-arm64 -ErrorAction SilentlyContinue

      - name: Publish for all architectures
        run: |
          $archs = @("win-x64", "win-x86", "win-arm64")
          foreach ($arch in $archs) {
            $outDir = "publish-$($arch.Split('-')[1])"
            dotnet publish "VK UI3/VK UI3.csproj" -c Release -r $arch `
              -p:PublishProfile=Unpackaged `
              -p:EnableMsixTooling=true `
              -p:WindowsPackageType=None `
              -p:SelfContained=true `
              -p:PublishSingleFile=true `
              -p:CsWinRTIIDOptimizerEnabled=false `
              -p:DebugType=embedded `
              -o $outDir
              
            Compress-Archive -Path "$outDir/*" -DestinationPath "VK_UI3_$($arch.Split('-')[1]).zip"
          }

      - name: Zip x64 build
        run: |
          powershell Compress-Archive -Path publish-x64\* -DestinationPath VK_UI3_win-x64.zip

      - name: Zip x86 build
        run: |
          powershell Compress-Archive -Path publish-x86\* -DestinationPath VK_UI3_win-x86.zip

      - name: Zip arm64 build
        run: |
          powershell Compress-Archive -Path publish-arm64\* -DestinationPath VK_UI3_win-arm64.zip

      - name: Upload x64 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: VK_UI3_win-x64
          path: VK_UI3_win-x64.zip

      - name: Upload x86 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: VK_UI3_win-x86
          path: VK_UI3_win-x86.zip

      - name: Upload arm64 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: VK_UI3_win-arm64
          path: VK_UI3_win-arm64.zip

      - name: Upload x64 ZIP to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: VK_UI3_win-x64.zip
          asset_name: VK_UI3_win-x64_${{ steps.get_version.outputs.VERSION }}.zip
          tag: ${{ steps.get_version.outputs.VERSION }}
          overwrite: true
        if: github.event.inputs.release == 'true'

      - name: Upload x86 ZIP to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: VK_UI3_win-x86.zip
          asset_name: VK_UI3_win-x86_${{ steps.get_version.outputs.VERSION }}.zip
          tag: ${{ steps.get_version.outputs.VERSION }}
          overwrite: true
        if: github.event.inputs.release == 'true'

      - name: Upload arm64 ZIP to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: VK_UI3_win-arm64.zip
          asset_name: VK_UI3_win-arm64_${{ steps.get_version.outputs.VERSION }}.zip
          tag: ${{ steps.get_version.outputs.VERSION }}
          overwrite: true
        if: github.event.inputs.release == 'true'
