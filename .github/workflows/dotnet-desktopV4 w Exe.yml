name: –ê–≤—Ç–æ—Å–±–æ—Ä–∫–∞ Music M with EXE

on:
  workflow_dispatch:
    inputs:
      namevers:
        description: "–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞"
        required: true
        default: "ü§ñ –ê–≤—Ç–æ—Å–±–æ—Ä–∫–∞"
      descr:
        description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞"
        required: true
        default: "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
      release:
        description: "–í—ã–∫–∏–Ω—É—Ç—å –≤ —Ä–µ–ª–∏–∑?"
        required: true
        default: false
        type: boolean
      prerelease:
        description: "–ü—Ä–µ—Ä–µ–ª–∏–∑?"
        required: true
        default: true
        type: boolean

  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        platform: [x64]

    runs-on:
      windows-latest # –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ä–∞–Ω–Ω–µ—Ä–æ–≤
      # —Å–º. https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: "VK UI3 (Package)" # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ —Ä–µ—à–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, App1.sln.

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          node-version: 16
          fetch-depth: 0

      # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ base64 pfx –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º Signing_Certificate
      - name: Decode the pfx
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
          $certificatePath = "${{ github.workspace }}\GitHubActionsWorkflow.pfx"
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

      - name: –û–±–Ω–æ–≤–∏—Ç—å TOKEN_STAT_SLY
        run: |
          $repoName = "${{ github.repository }}".Split('/')[1]
          $content = Get-Content -Path "D:\a\$repoName\$repoName\VK UI3\StaticParams.cs"
          $updatedContent = $content -replace 'Environment.GetEnvironmentVariable\("TOKEN_STAT_SLY"\)', '"${{ secrets.TOKEN_STAT_SLY }}"'
          Set-Content -Path "D:\a\$repoName\$repoName\VK UI3\StaticParams.cs" -Value $updatedContent
          Write-Output $updatedContent

      - name: Display disk tree
        run: |
          Get-ChildItem -Recurse | Sort-Object Length -Descending

      # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å .NET Core
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # –î–æ–±–∞–≤–∏—Ç—å MSBuild –≤ PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2

      - name: –ò–∑–≤–ª–µ—á—å –≤–µ—Ä—Å–∏—é
        id: get_version
        run: |
          $repoName = "${{ github.repository }}".Split('/')[1]
          $csprojPath = "D:\a\$repoName\$repoName\VK UI3\VK UI3.csproj"
          $doc = New-Object xml
          $doc.Load((Convert-Path $csprojPath))
          $version = $doc.SelectSingleNode('//AppxPackageVersion').InnerText
          echo "::set-output name=VERSION::$version"
          echo "–í–µ—Ä—Å–∏—è: $version"
        continue-on-error: true
        if: github.event.inputs.release == 'true'

      - name: –ü–æ–¥—Å—Ç–∞–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é –≤ Package.appxmanifest
        run: |
          $repoName = "${{ github.repository }}".Split('/')[1]
          $csproj = "D:\a\$repoName\$repoName\VK UI3\VK UI3.csproj"
          $manifest = "D:\a\$repoName\$repoName\VK UI3 (Package)\Package.appxmanifest"
          [xml]$doc = Get-Content $csproj
          $version = $doc.SelectSingleNode('//AppxPackageVersion').InnerText.Trim()
          [xml]$xml = Get-Content $manifest
          $xml.Package.Identity.Version = $version
          $xml.Save($manifest)
        if: github.event.inputs.release == 'true'

      - name: Upload Package.appxmanifest as artifact
        uses: actions/upload-artifact@v4
        with:
          name: PackageAppxManifest
          path: D:\a\Music-M\Music-M\VK UI3 (Package)\Package.appxmanifest
        if: github.event.inputs.release == 'true'
          
      - name: Clean publish directories
        run: |
          Remove-Item -Recurse -Force publish-x64, publish-x86, publish-arm64 -ErrorAction SilentlyContinue

      - name: Publish and package all architectures
        run: |
          $architectures = @{
              "x64"   = @{ RuntimeId = "win-x64";   OutputDir = "publish-x64" }
              "x86"   = @{ RuntimeId = "win-x86";   OutputDir = "publish-x86" }
              "arm64" = @{ RuntimeId = "win-arm64"; OutputDir = "publish-arm64" }
          }
      
          foreach ($arch in $architectures.Keys) {
              $runtimeId = $architectures[$arch].RuntimeId
              $outDir = $architectures[$arch].OutputDir
              $zipFile = "VK_UI3_$arch.zip"
              
              Write-Host "=== Processing $arch architecture ==="
              
              # –û—á–∏—Å—Ç–∫–∞
              Remove-Item -Recurse -Force $outDir, $zipFile -ErrorAction SilentlyContinue
              
              # –ü—É–±–ª–∏–∫–∞—Ü–∏—è
              dotnet publish "VK UI3/VK UI3.csproj" `
                  --configuration Release `
                  --runtime $runtimeId `
                  --output $outDir `
                  -p:PublishProfile=Properties\PublishProfiles\Unpackaged.pubxml `
                  -p:CsWinRTIIDOptimizerEnabled=false `
                  -p:DebugType=none `
                  -p:DebugSymbols=false `
                  -p:CopyOutputSymbolsToOutputDirectory=false `
                  -p:EnableMsixTooling=true `
                  -p:WindowsPackageType=None `
                  -p:SelfContained=true `
                  -p:PublishSingleFile=true `
                  --verbosity normal
      
              # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏
              Write-Host "Contents of $outDir:"
              Get-ChildItem -Path $outDir -Recurse | Format-Table FullName
              
              # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Å–æ –≤—Å–µ–º–∏ —Ñ–∞–π–ª–∞–º–∏
              Compress-Archive -Path "$outDir\*" -DestinationPath $zipFile -CompressionLevel Optimal
              
              # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∞—Ä—Ö–∏–≤–∞
              if (Test-Path $zipFile) {
                  $size = (Get-Item $zipFile).Length / 1MB
                  Write-Host "Created $zipFile ($($size.ToString('0.00')) MB)"
              } else {
                  Write-Host "##[error] Failed to create $zipFile"
                  exit 1
              }
          }

          
      - name: Zip x64 build
        run: |
          powershell Compress-Archive -Path publish-x64\* -DestinationPath VK_UI3_win-x64.zip

      - name: Zip x86 build
        run: |
          powershell Compress-Archive -Path publish-x86\* -DestinationPath VK_UI3_win-x86.zip

      - name: Zip arm64 build
        run: |
          powershell Compress-Archive -Path publish-arm64\* -DestinationPath VK_UI3_win-arm64.zip

      - name: Upload x64 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: VK_UI3_win-x64
          path: VK_UI3_win-x64.zip

      - name: Upload x86 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: VK_UI3_win-x86
          path: VK_UI3_win-x86.zip

      - name: Upload arm64 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: VK_UI3_win-arm64
          path: VK_UI3_win-arm64.zip

      - name: Upload x64 ZIP to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: VK_UI3_win-x64.zip
          asset_name: VK_UI3_win-x64_${{ steps.get_version.outputs.VERSION }}.zip
          tag: ${{ steps.get_version.outputs.VERSION }}
          overwrite: true
        if: github.event.inputs.release == 'true'

      - name: Upload x86 ZIP to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: VK_UI3_win-x86.zip
          asset_name: VK_UI3_win-x86_${{ steps.get_version.outputs.VERSION }}.zip
          tag: ${{ steps.get_version.outputs.VERSION }}
          overwrite: true
        if: github.event.inputs.release == 'true'

      - name: Upload arm64 ZIP to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: VK_UI3_win-arm64.zip
          asset_name: VK_UI3_win-arm64_${{ steps.get_version.outputs.VERSION }}.zip
          tag: ${{ steps.get_version.outputs.VERSION }}
          overwrite: true
        if: github.event.inputs.release == 'true'
